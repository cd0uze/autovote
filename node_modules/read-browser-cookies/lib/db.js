"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.query = void 0;
const sqlite3_1 = __importStar(require("sqlite3"));
const helper_1 = require("./helper");
const DEFAULT_SQL = `
SELECT host_key as hostKey, name, value, encrypted_value as encryptedValue, path, expires_utc as expiresUtc, is_secure as isSecure
FROM cookies
`;
const debug = helper_1.baseDebug.extend('db');
async function query(dbpath, site) {
    const db = new sqlite3_1.Database(dbpath, sqlite3_1.default.OPEN_READONLY);
    let sql = DEFAULT_SQL;
    const params = {};
    if (site) {
        sql += `WHERE host_key like $site`;
        params.$site = `%${site}%`;
    }
    debug('exec: sql -> %s, with params -> %o', sql, params);
    const rows = await new Promise((resolve, reject) => {
        db.all(sql, params, (err, rows) => {
            if (err)
                return reject(err);
            resolve(rows);
        });
    });
    rows.forEach((row) => {
        postProcess(row);
    });
    db.close();
    return rows;
}
exports.query = query;
/**
 * extra process for cookie
 */
function postProcess(cookie) {
    (0, helper_1.execCrossPlatform)({}, true);
}
